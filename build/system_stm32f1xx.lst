ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f1xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemInit:
  25              	.LFB65:
  26              		.file 1 "Src/system_stm32f1xx.c"
   1:Src/system_stm32f1xx.c **** /**
   2:Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f1xx.c ****   * 
   7:Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
   8:Src/system_stm32f1xx.c ****   *     user application:
   9:Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  10:Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  11:Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  12:Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
  13:Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  14:Src/system_stm32f1xx.c ****   *
  15:Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  17:Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  18:Src/system_stm32f1xx.c ****   *                                     
  19:Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  21:Src/system_stm32f1xx.c ****   *                                 during program execution.
  22:Src/system_stm32f1xx.c ****   *
  23:Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  24:Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  25:Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  26:Src/system_stm32f1xx.c ****   *
  27:Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  28:Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  29:Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  30:Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
  31:Src/system_stm32f1xx.c ****   *    configuration.
  32:Src/system_stm32f1xx.c ****   *        
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 2


  33:Src/system_stm32f1xx.c ****   ******************************************************************************
  34:Src/system_stm32f1xx.c ****   * @attention
  35:Src/system_stm32f1xx.c ****   *
  36:Src/system_stm32f1xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  37:Src/system_stm32f1xx.c ****   * All rights reserved.</center></h2>
  38:Src/system_stm32f1xx.c ****   *
  39:Src/system_stm32f1xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  40:Src/system_stm32f1xx.c ****   * the "License"; You may not use this file except in compliance with the
  41:Src/system_stm32f1xx.c ****   * License. You may obtain a copy of the License at:
  42:Src/system_stm32f1xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  43:Src/system_stm32f1xx.c ****   *
  44:Src/system_stm32f1xx.c ****   ******************************************************************************
  45:Src/system_stm32f1xx.c ****   */
  46:Src/system_stm32f1xx.c **** 
  47:Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  48:Src/system_stm32f1xx.c ****   * @{
  49:Src/system_stm32f1xx.c ****   */
  50:Src/system_stm32f1xx.c **** 
  51:Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  52:Src/system_stm32f1xx.c ****   * @{
  53:Src/system_stm32f1xx.c ****   */  
  54:Src/system_stm32f1xx.c ****   
  55:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  56:Src/system_stm32f1xx.c ****   * @{
  57:Src/system_stm32f1xx.c ****   */
  58:Src/system_stm32f1xx.c **** 
  59:Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  60:Src/system_stm32f1xx.c **** 
  61:Src/system_stm32f1xx.c **** /**
  62:Src/system_stm32f1xx.c ****   * @}
  63:Src/system_stm32f1xx.c ****   */
  64:Src/system_stm32f1xx.c **** 
  65:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  66:Src/system_stm32f1xx.c ****   * @{
  67:Src/system_stm32f1xx.c ****   */
  68:Src/system_stm32f1xx.c **** 
  69:Src/system_stm32f1xx.c **** /**
  70:Src/system_stm32f1xx.c ****   * @}
  71:Src/system_stm32f1xx.c ****   */
  72:Src/system_stm32f1xx.c **** 
  73:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  74:Src/system_stm32f1xx.c ****   * @{
  75:Src/system_stm32f1xx.c ****   */
  76:Src/system_stm32f1xx.c **** 
  77:Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  78:Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  79:Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  80:Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  81:Src/system_stm32f1xx.c **** 
  82:Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
  83:Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
  84:Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  85:Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
  86:Src/system_stm32f1xx.c **** 
  87:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
  88:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
  89:Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 3


  90:Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
  91:Src/system_stm32f1xx.c **** 
  92:Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  93:Src/system_stm32f1xx.c ****      Internal SRAM. */ 
  94:Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
  95:Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET  0x3000
  96:Src/system_stm32f1xx.c **** /*#define VECT_TAB_OFFSET  0x00000000U */ /*!< Vector Table base offset field. 
  97:Src/system_stm32f1xx.c **** 
  98:Src/system_stm32f1xx.c ****                                   This value must be a multiple of 0x200. */
  99:Src/system_stm32f1xx.c **** 
 100:Src/system_stm32f1xx.c **** 
 101:Src/system_stm32f1xx.c **** /**
 102:Src/system_stm32f1xx.c ****   * @}
 103:Src/system_stm32f1xx.c ****   */
 104:Src/system_stm32f1xx.c **** 
 105:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 106:Src/system_stm32f1xx.c ****   * @{
 107:Src/system_stm32f1xx.c ****   */
 108:Src/system_stm32f1xx.c **** 
 109:Src/system_stm32f1xx.c **** /**
 110:Src/system_stm32f1xx.c ****   * @}
 111:Src/system_stm32f1xx.c ****   */
 112:Src/system_stm32f1xx.c **** 
 113:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 114:Src/system_stm32f1xx.c ****   * @{
 115:Src/system_stm32f1xx.c ****   */
 116:Src/system_stm32f1xx.c **** 
 117:Src/system_stm32f1xx.c ****   /* This variable is updated in three ways:
 118:Src/system_stm32f1xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 119:Src/system_stm32f1xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 120:Src/system_stm32f1xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 121:Src/system_stm32f1xx.c ****          Note: If you use this function to configure the system clock; then there
 122:Src/system_stm32f1xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 123:Src/system_stm32f1xx.c ****                variable is updated automatically.
 124:Src/system_stm32f1xx.c ****   */
 125:Src/system_stm32f1xx.c **** uint32_t SystemCoreClock = 16000000;
 126:Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 127:Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 128:Src/system_stm32f1xx.c **** 
 129:Src/system_stm32f1xx.c **** /**
 130:Src/system_stm32f1xx.c ****   * @}
 131:Src/system_stm32f1xx.c ****   */
 132:Src/system_stm32f1xx.c **** 
 133:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 134:Src/system_stm32f1xx.c ****   * @{
 135:Src/system_stm32f1xx.c ****   */
 136:Src/system_stm32f1xx.c **** 
 137:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 138:Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 139:Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 140:Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 141:Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 142:Src/system_stm32f1xx.c **** 
 143:Src/system_stm32f1xx.c **** /**
 144:Src/system_stm32f1xx.c ****   * @}
 145:Src/system_stm32f1xx.c ****   */
 146:Src/system_stm32f1xx.c **** 
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 4


 147:Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 148:Src/system_stm32f1xx.c ****   * @{
 149:Src/system_stm32f1xx.c ****   */
 150:Src/system_stm32f1xx.c **** 
 151:Src/system_stm32f1xx.c **** /**
 152:Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 153:Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 154:Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 155:Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 156:Src/system_stm32f1xx.c ****   * @param  None
 157:Src/system_stm32f1xx.c ****   * @retval None
 158:Src/system_stm32f1xx.c ****   */
 159:Src/system_stm32f1xx.c **** void SystemInit (void)
 160:Src/system_stm32f1xx.c **** {
  27              		.loc 1 160 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 161:Src/system_stm32f1xx.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 162:Src/system_stm32f1xx.c ****   /* Set HSION bit */
 163:Src/system_stm32f1xx.c ****   RCC->CR |= 0x00000001U;
  32              		.loc 1 163 3 view .LVU1
  33              		.loc 1 163 11 is_stmt 0 view .LVU2
  34 0000 0E4B     		ldr	r3, .L2
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 42F00102 		orr	r2, r2, #1
  37 0008 1A60     		str	r2, [r3]
 164:Src/system_stm32f1xx.c **** 
 165:Src/system_stm32f1xx.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 166:Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)
 167:Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xF8FF0000U;
  38              		.loc 1 167 3 is_stmt 1 view .LVU3
  39              		.loc 1 167 13 is_stmt 0 view .LVU4
  40 000a 5968     		ldr	r1, [r3, #4]
  41 000c 0C4A     		ldr	r2, .L2+4
  42 000e 0A40     		ands	r2, r2, r1
  43 0010 5A60     		str	r2, [r3, #4]
 168:Src/system_stm32f1xx.c **** #else
 169:Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xF0FF0000U;
 170:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */   
 171:Src/system_stm32f1xx.c ****   
 172:Src/system_stm32f1xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 173:Src/system_stm32f1xx.c ****   RCC->CR &= 0xFEF6FFFFU;
  44              		.loc 1 173 3 is_stmt 1 view .LVU5
  45              		.loc 1 173 11 is_stmt 0 view .LVU6
  46 0012 1A68     		ldr	r2, [r3]
  47 0014 22F08472 		bic	r2, r2, #17301504
  48 0018 22F48032 		bic	r2, r2, #65536
  49 001c 1A60     		str	r2, [r3]
 174:Src/system_stm32f1xx.c **** 
 175:Src/system_stm32f1xx.c ****   /* Reset HSEBYP bit */
 176:Src/system_stm32f1xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  50              		.loc 1 176 3 is_stmt 1 view .LVU7
  51              		.loc 1 176 11 is_stmt 0 view .LVU8
  52 001e 1A68     		ldr	r2, [r3]
  53 0020 22F48022 		bic	r2, r2, #262144
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 5


  54 0024 1A60     		str	r2, [r3]
 177:Src/system_stm32f1xx.c **** 
 178:Src/system_stm32f1xx.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 179:Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xFF80FFFFU;
  55              		.loc 1 179 3 is_stmt 1 view .LVU9
  56              		.loc 1 179 13 is_stmt 0 view .LVU10
  57 0026 5A68     		ldr	r2, [r3, #4]
  58 0028 22F4FE02 		bic	r2, r2, #8323072
  59 002c 5A60     		str	r2, [r3, #4]
 180:Src/system_stm32f1xx.c **** 
 181:Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 182:Src/system_stm32f1xx.c ****   /* Reset PLL2ON and PLL3ON bits */
 183:Src/system_stm32f1xx.c ****   RCC->CR &= 0xEBFFFFFFU;
 184:Src/system_stm32f1xx.c **** 
 185:Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 186:Src/system_stm32f1xx.c ****   RCC->CIR = 0x00FF0000U;
 187:Src/system_stm32f1xx.c **** 
 188:Src/system_stm32f1xx.c ****   /* Reset CFGR2 register */
 189:Src/system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;
 190:Src/system_stm32f1xx.c **** #elif defined(STM32F100xB) || defined(STM32F100xE)
 191:Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 192:Src/system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
 193:Src/system_stm32f1xx.c **** 
 194:Src/system_stm32f1xx.c ****   /* Reset CFGR2 register */
 195:Src/system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;      
 196:Src/system_stm32f1xx.c **** #else
 197:Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 198:Src/system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
  60              		.loc 1 198 3 is_stmt 1 view .LVU11
  61              		.loc 1 198 12 is_stmt 0 view .LVU12
  62 002e 4FF41F02 		mov	r2, #10420224
  63 0032 9A60     		str	r2, [r3, #8]
 199:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 200:Src/system_stm32f1xx.c ****     
 201:Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 202:Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 203:Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 204:Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 205:Src/system_stm32f1xx.c **** #endif 
 206:Src/system_stm32f1xx.c **** 
 207:Src/system_stm32f1xx.c **** #ifdef VECT_TAB_SRAM
 208:Src/system_stm32f1xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 209:Src/system_stm32f1xx.c **** #else
 210:Src/system_stm32f1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
  64              		.loc 1 210 3 is_stmt 1 view .LVU13
  65              		.loc 1 210 13 is_stmt 0 view .LVU14
  66 0034 034B     		ldr	r3, .L2+8
  67 0036 044A     		ldr	r2, .L2+12
  68 0038 9A60     		str	r2, [r3, #8]
 211:Src/system_stm32f1xx.c **** #endif 
 212:Src/system_stm32f1xx.c **** }
  69              		.loc 1 212 1 view .LVU15
  70 003a 7047     		bx	lr
  71              	.L3:
  72              		.align	2
  73              	.L2:
  74 003c 00100240 		.word	1073876992
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 6


  75 0040 0000FFF8 		.word	-117506048
  76 0044 00ED00E0 		.word	-536810240
  77 0048 00300008 		.word	134230016
  78              		.cfi_endproc
  79              	.LFE65:
  81              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  82              		.align	1
  83              		.global	SystemCoreClockUpdate
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	SystemCoreClockUpdate:
  90              	.LFB66:
 213:Src/system_stm32f1xx.c **** 
 214:Src/system_stm32f1xx.c **** /**
 215:Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 216:Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 217:Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 218:Src/system_stm32f1xx.c ****   *         other parameters.
 219:Src/system_stm32f1xx.c ****   *           
 220:Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 221:Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 222:Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 223:Src/system_stm32f1xx.c ****   *     
 224:Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 225:Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 226:Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 227:Src/system_stm32f1xx.c ****   *             
 228:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 229:Src/system_stm32f1xx.c ****   *                                              
 230:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 231:Src/system_stm32f1xx.c ****   *                          
 232:Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 233:Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 234:Src/system_stm32f1xx.c ****   *         
 235:Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 236:Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 237:Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 238:Src/system_stm32f1xx.c ****   *    
 239:Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 240:Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 241:Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 242:Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 243:Src/system_stm32f1xx.c ****   *                
 244:Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 245:Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 246:Src/system_stm32f1xx.c ****   * @param  None
 247:Src/system_stm32f1xx.c ****   * @retval None
 248:Src/system_stm32f1xx.c ****   */
 249:Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 250:Src/system_stm32f1xx.c **** {
  91              		.loc 1 250 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 7


 251:Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
  96              		.loc 1 251 3 view .LVU17
  97              	.LVL0:
 252:Src/system_stm32f1xx.c **** 
 253:Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 254:Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 255:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 256:Src/system_stm32f1xx.c **** 
 257:Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 258:Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 259:Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 260:Src/system_stm32f1xx.c ****     
 261:Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 262:Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  98              		.loc 1 262 3 view .LVU18
  99              		.loc 1 262 12 is_stmt 0 view .LVU19
 100 0000 1F4B     		ldr	r3, .L12
 101 0002 5B68     		ldr	r3, [r3, #4]
 102              		.loc 1 262 7 view .LVU20
 103 0004 03F00C03 		and	r3, r3, #12
 104              	.LVL1:
 263:Src/system_stm32f1xx.c ****   
 264:Src/system_stm32f1xx.c ****   switch (tmp)
 105              		.loc 1 264 3 is_stmt 1 view .LVU21
 106 0008 042B     		cmp	r3, #4
 107 000a 14D0     		beq	.L5
 108 000c 082B     		cmp	r3, #8
 109 000e 16D0     		beq	.L6
 110 0010 1BB1     		cbz	r3, .L11
 265:Src/system_stm32f1xx.c ****   {
 266:Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 267:Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 268:Src/system_stm32f1xx.c ****       break;
 269:Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 270:Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 271:Src/system_stm32f1xx.c ****       break;
 272:Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 273:Src/system_stm32f1xx.c **** 
 274:Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 275:Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 276:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 277:Src/system_stm32f1xx.c ****       
 278:Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 279:Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 280:Src/system_stm32f1xx.c ****       
 281:Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 282:Src/system_stm32f1xx.c ****       {
 283:Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 284:Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 285:Src/system_stm32f1xx.c ****       }
 286:Src/system_stm32f1xx.c ****       else
 287:Src/system_stm32f1xx.c ****       {
 288:Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 289:Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 290:Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 291:Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 292:Src/system_stm32f1xx.c ****  #else
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 8


 293:Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 294:Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 295:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 296:Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 297:Src/system_stm32f1xx.c ****         }
 298:Src/system_stm32f1xx.c ****         else
 299:Src/system_stm32f1xx.c ****         {
 300:Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 301:Src/system_stm32f1xx.c ****         }
 302:Src/system_stm32f1xx.c ****  #endif
 303:Src/system_stm32f1xx.c ****       }
 304:Src/system_stm32f1xx.c **** #else
 305:Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 306:Src/system_stm32f1xx.c ****       
 307:Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 308:Src/system_stm32f1xx.c ****       {
 309:Src/system_stm32f1xx.c ****          pllmull += 2U;
 310:Src/system_stm32f1xx.c ****       }
 311:Src/system_stm32f1xx.c ****       else
 312:Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 313:Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 314:Src/system_stm32f1xx.c ****       }
 315:Src/system_stm32f1xx.c ****             
 316:Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 317:Src/system_stm32f1xx.c ****       {
 318:Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 319:Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 320:Src/system_stm32f1xx.c ****       }
 321:Src/system_stm32f1xx.c ****       else
 322:Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 323:Src/system_stm32f1xx.c ****         
 324:Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 325:Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 326:Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 327:Src/system_stm32f1xx.c ****         
 328:Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 329:Src/system_stm32f1xx.c ****         { 
 330:Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 331:Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 332:Src/system_stm32f1xx.c ****         }
 333:Src/system_stm32f1xx.c ****         else
 334:Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 335:Src/system_stm32f1xx.c ****           
 336:Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 337:Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 338:Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 339:Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 340:Src/system_stm32f1xx.c ****         }
 341:Src/system_stm32f1xx.c ****       }
 342:Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 343:Src/system_stm32f1xx.c ****       break;
 344:Src/system_stm32f1xx.c **** 
 345:Src/system_stm32f1xx.c ****     default:
 346:Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 111              		.loc 1 346 7 view .LVU22
 112              		.loc 1 346 23 is_stmt 0 view .LVU23
 113 0012 1C4B     		ldr	r3, .L12+4
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 9


 114              	.LVL2:
 115              		.loc 1 346 23 view .LVU24
 116 0014 1C4A     		ldr	r2, .L12+8
 117 0016 1A60     		str	r2, [r3]
 347:Src/system_stm32f1xx.c ****       break;
 118              		.loc 1 347 7 is_stmt 1 view .LVU25
 119 0018 02E0     		b	.L8
 120              	.LVL3:
 121              	.L11:
 267:Src/system_stm32f1xx.c ****       break;
 122              		.loc 1 267 7 view .LVU26
 267:Src/system_stm32f1xx.c ****       break;
 123              		.loc 1 267 23 is_stmt 0 view .LVU27
 124 001a 1A4B     		ldr	r3, .L12+4
 125              	.LVL4:
 267:Src/system_stm32f1xx.c ****       break;
 126              		.loc 1 267 23 view .LVU28
 127 001c 1A4A     		ldr	r2, .L12+8
 128 001e 1A60     		str	r2, [r3]
 268:Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 129              		.loc 1 268 7 is_stmt 1 view .LVU29
 130              	.LVL5:
 131              	.L8:
 348:Src/system_stm32f1xx.c ****   }
 349:Src/system_stm32f1xx.c ****   
 350:Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 351:Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 352:Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 132              		.loc 1 352 3 view .LVU30
 133              		.loc 1 352 28 is_stmt 0 view .LVU31
 134 0020 174B     		ldr	r3, .L12
 135 0022 5B68     		ldr	r3, [r3, #4]
 136              		.loc 1 352 52 view .LVU32
 137 0024 C3F30313 		ubfx	r3, r3, #4, #4
 138              		.loc 1 352 22 view .LVU33
 139 0028 184A     		ldr	r2, .L12+12
 140 002a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 141              	.LVL6:
 353:Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 354:Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 142              		.loc 1 354 3 is_stmt 1 view .LVU34
 143              		.loc 1 354 19 is_stmt 0 view .LVU35
 144 002c 154A     		ldr	r2, .L12+4
 145 002e 1368     		ldr	r3, [r2]
 146 0030 CB40     		lsrs	r3, r3, r1
 147 0032 1360     		str	r3, [r2]
 355:Src/system_stm32f1xx.c **** }
 148              		.loc 1 355 1 view .LVU36
 149 0034 7047     		bx	lr
 150              	.LVL7:
 151              	.L5:
 270:Src/system_stm32f1xx.c ****       break;
 152              		.loc 1 270 7 is_stmt 1 view .LVU37
 270:Src/system_stm32f1xx.c ****       break;
 153              		.loc 1 270 23 is_stmt 0 view .LVU38
 154 0036 134B     		ldr	r3, .L12+4
 155              	.LVL8:
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 10


 270:Src/system_stm32f1xx.c ****       break;
 156              		.loc 1 270 23 view .LVU39
 157 0038 134A     		ldr	r2, .L12+8
 158 003a 1A60     		str	r2, [r3]
 271:Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 159              		.loc 1 271 7 is_stmt 1 view .LVU40
 160 003c F0E7     		b	.L8
 161              	.LVL9:
 162              	.L6:
 275:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 163              		.loc 1 275 7 view .LVU41
 275:Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 164              		.loc 1 275 20 is_stmt 0 view .LVU42
 165 003e 104A     		ldr	r2, .L12
 166 0040 5368     		ldr	r3, [r2, #4]
 167              	.LVL10:
 276:Src/system_stm32f1xx.c ****       
 168              		.loc 1 276 7 is_stmt 1 view .LVU43
 276:Src/system_stm32f1xx.c ****       
 169              		.loc 1 276 22 is_stmt 0 view .LVU44
 170 0042 5268     		ldr	r2, [r2, #4]
 171              	.LVL11:
 279:Src/system_stm32f1xx.c ****       
 172              		.loc 1 279 7 is_stmt 1 view .LVU45
 279:Src/system_stm32f1xx.c ****       
 173              		.loc 1 279 27 is_stmt 0 view .LVU46
 174 0044 C3F38343 		ubfx	r3, r3, #18, #4
 175              	.LVL12:
 279:Src/system_stm32f1xx.c ****       
 176              		.loc 1 279 15 view .LVU47
 177 0048 0233     		adds	r3, r3, #2
 178              	.LVL13:
 281:Src/system_stm32f1xx.c ****       {
 179              		.loc 1 281 7 is_stmt 1 view .LVU48
 281:Src/system_stm32f1xx.c ****       {
 180              		.loc 1 281 10 is_stmt 0 view .LVU49
 181 004a 12F4803F 		tst	r2, #65536
 182 004e 05D1     		bne	.L9
 284:Src/system_stm32f1xx.c ****       }
 183              		.loc 1 284 9 is_stmt 1 view .LVU50
 284:Src/system_stm32f1xx.c ****       }
 184              		.loc 1 284 45 is_stmt 0 view .LVU51
 185 0050 0F4A     		ldr	r2, .L12+16
 186              	.LVL14:
 284:Src/system_stm32f1xx.c ****       }
 187              		.loc 1 284 45 view .LVU52
 188 0052 02FB03F3 		mul	r3, r2, r3
 189              	.LVL15:
 284:Src/system_stm32f1xx.c ****       }
 190              		.loc 1 284 25 view .LVU53
 191 0056 0B4A     		ldr	r2, .L12+4
 192 0058 1360     		str	r3, [r2]
 193 005a E1E7     		b	.L8
 194              	.LVL16:
 195              	.L9:
 294:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 196              		.loc 1 294 9 is_stmt 1 view .LVU54
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 11


 294:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 197              		.loc 1 294 17 is_stmt 0 view .LVU55
 198 005c 084A     		ldr	r2, .L12
 199              	.LVL17:
 294:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 200              		.loc 1 294 17 view .LVU56
 201 005e 5268     		ldr	r2, [r2, #4]
 294:Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 202              		.loc 1 294 12 view .LVU57
 203 0060 12F4003F 		tst	r2, #131072
 204 0064 05D0     		beq	.L10
 296:Src/system_stm32f1xx.c ****         }
 205              		.loc 1 296 11 is_stmt 1 view .LVU58
 296:Src/system_stm32f1xx.c ****         }
 206              		.loc 1 296 47 is_stmt 0 view .LVU59
 207 0066 0A4A     		ldr	r2, .L12+16
 208 0068 02FB03F3 		mul	r3, r2, r3
 209              	.LVL18:
 296:Src/system_stm32f1xx.c ****         }
 210              		.loc 1 296 27 view .LVU60
 211 006c 054A     		ldr	r2, .L12+4
 212 006e 1360     		str	r3, [r2]
 213 0070 D6E7     		b	.L8
 214              	.LVL19:
 215              	.L10:
 300:Src/system_stm32f1xx.c ****         }
 216              		.loc 1 300 11 is_stmt 1 view .LVU61
 300:Src/system_stm32f1xx.c ****         }
 217              		.loc 1 300 39 is_stmt 0 view .LVU62
 218 0072 054A     		ldr	r2, .L12+8
 219 0074 02FB03F3 		mul	r3, r2, r3
 220              	.LVL20:
 300:Src/system_stm32f1xx.c ****         }
 221              		.loc 1 300 27 view .LVU63
 222 0078 024A     		ldr	r2, .L12+4
 223 007a 1360     		str	r3, [r2]
 224 007c D0E7     		b	.L8
 225              	.L13:
 226 007e 00BF     		.align	2
 227              	.L12:
 228 0080 00100240 		.word	1073876992
 229 0084 00000000 		.word	.LANCHOR0
 230 0088 00127A00 		.word	8000000
 231 008c 00000000 		.word	.LANCHOR1
 232 0090 00093D00 		.word	4000000
 233              		.cfi_endproc
 234              	.LFE66:
 236              		.global	APBPrescTable
 237              		.global	AHBPrescTable
 238              		.global	SystemCoreClock
 239              		.section	.data.SystemCoreClock,"aw"
 240              		.align	2
 241              		.set	.LANCHOR0,. + 0
 244              	SystemCoreClock:
 245 0000 0024F400 		.word	16000000
 246              		.section	.rodata.AHBPrescTable,"a"
 247              		.align	2
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 12


 248              		.set	.LANCHOR1,. + 0
 251              	AHBPrescTable:
 252 0000 00       		.byte	0
 253 0001 00       		.byte	0
 254 0002 00       		.byte	0
 255 0003 00       		.byte	0
 256 0004 00       		.byte	0
 257 0005 00       		.byte	0
 258 0006 00       		.byte	0
 259 0007 00       		.byte	0
 260 0008 01       		.byte	1
 261 0009 02       		.byte	2
 262 000a 03       		.byte	3
 263 000b 04       		.byte	4
 264 000c 06       		.byte	6
 265 000d 07       		.byte	7
 266 000e 08       		.byte	8
 267 000f 09       		.byte	9
 268              		.section	.rodata.APBPrescTable,"a"
 269              		.align	2
 272              	APBPrescTable:
 273 0000 00       		.byte	0
 274 0001 00       		.byte	0
 275 0002 00       		.byte	0
 276 0003 00       		.byte	0
 277 0004 01       		.byte	1
 278 0005 02       		.byte	2
 279 0006 03       		.byte	3
 280 0007 04       		.byte	4
 281              		.text
 282              	.Letext0:
 283              		.file 2 "d:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 284              		.file 3 "d:\\stm32\\gnu mcu eclipse\\arm embedded gcc\\8.2.1-1.4-20190214-0604\\arm-none-eabi\\inc
 285              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 286              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 287              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 288              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 289              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f1xx.c
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:16     .text.SystemInit:0000000000000000 $t
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:24     .text.SystemInit:0000000000000000 SystemInit
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:74     .text.SystemInit:000000000000003c $d
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:82     .text.SystemCoreClockUpdate:0000000000000000 $t
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:89     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:228    .text.SystemCoreClockUpdate:0000000000000080 $d
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:272    .rodata.APBPrescTable:0000000000000000 APBPrescTable
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:251    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:244    .data.SystemCoreClock:0000000000000000 SystemCoreClock
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:240    .data.SystemCoreClock:0000000000000000 $d
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:247    .rodata.AHBPrescTable:0000000000000000 $d
C:\Users\madmax\AppData\Local\Temp\ccbCBB9H.s:269    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
